(ns beerpressure.db.brewery-test
  (:require [clojure.test :refer :all]
            [beerpressure.handler :refer :all]
            [beerpressure.db.common-test :refer :all]))

(use-fixtures :once db-setup-with-logged-user-fixture)

(deftest test-resolve-brewery
  (testing "brewery(id: 2)"
    (let [graphql-query (long-str "{"
                                  "  brewery(id: 2) {"
                                  "    id"
                                  "    name"
                                  "    description"
                                  "    imagePath"
                                  "    tags {"
                                  "      id"
                                  "      name"
                                  "    }"
                                  "    rating"
                                  "  }"
                                  "}")
          expected-response (long-str "{"
                                      "  \"data\": {"
                                      "    \"brewery\": {"
                                      "      \"id\": 2,"
                                      "      \"name\": \"Labatt\","
                                      "      \"description\": \"Une copie de MolsonCoors en pire...\","
                                      "      \"imagePath\": \"https:\\/\\/upload.wikimedia.org\\/wikipedia\\/fr\\/4\\/40\\/Labatt.png\""
                                      "      \"tags\": ["
                                      "        {"
                                      "          \"id\": 1,"
                                      "          \"name\": \"Industrielle\""
                                      "        }"
                                      "      ],"
                                      "      \"rating\": 1.1666666666666667"
                                      "    }"
                                      "  }"
                                      "}")
          response (execute-graphql-query graphql-query)]
      (is (is-data-equal response expected-response)))))

(deftest test-resolve-breweries
  (testing "breweries(skip: 1, first: 2, orderBy: NAME, orderType: ASC, tags: [])"
    (let [graphql-query (long-str "{"
                                  "  breweries(skip: 1, first: 2, orderBy: NAME, orderType: ASC, tags: []) {"
                                  "    id"
                                  "    name"
                                  "    description"
                                  "    imagePath"
                                  "    tags {"
                                  "      id"
                                  "      name"
                                  "    }"
                                  "    rating"
                                  "  }"
                                  "}")
          expected-response (long-str "{"
                                      "  \"data\": {"
                                      "    \"breweries\": ["
                                      "      {"
                                      "        \"id\": 2,"
                                      "        \"name\": \"Labatt\","
                                      "        \"description\": \"Une copie de MolsonCoors en pire...\","
                                      "        \"imagePath\": \"https:\\/\\/upload.wikimedia.org\\/wikipedia\\/fr\\/4\\/40\\/Labatt.png\""
                                      "        \"tags\": ["
                                      "          {"
                                      "            \"id\": 1,"
                                      "            \"name\": \"Industrielle\""
                                      "          }"
                                      "        ],"
                                      "        \"rating\": 1.1666666666666667"
                                      "      },"
                                      "      {"
                                      "        \"id\": 1,"
                                      "        \"name\": \"MolsonCoors\","
                                      "        \"description\": \"Ils ne font de la marde comme bière.\","
                                      "        \"imagePath\": \"https:\\/\\/images.radio-canada.ca\\/q_auto,w_1250\\/v1\\/ici-info\\/16x9\\/molson-montreal-notre-dame.jpg\","
                                      "        \"tags\": ["
                                      "          {"
                                      "            \"id\": 1,"
                                      "            \"name\": \"Industrielle\""
                                      "          }"
                                      "        ],"
                                      "        \"rating\": 1.5"
                                      "      }"
                                      "    ]"
                                      "  }"
                                      "}")
          response (execute-graphql-query graphql-query)]
      (is (is-data-equal response expected-response))))
  (testing "breweries(skip: 1, first: 2, orderBy: NAME, orderType: DESC, tags: [])"
    (let [graphql-query (long-str "{"
                                  "  breweries(skip: 1, first: 2, orderBy: NAME, orderType: DESC, tags: []) {"
                                  "    id"
                                  "    name"
                                  "    description"
                                  "    imagePath"
                                  "    tags {"
                                  "      id"
                                  "      name"
                                  "    }"
                                  "    rating"
                                  "  }"
                                  "}")
          expected-response (long-str "{"
                                      "  \"data\": {"
                                      "    \"breweries\": ["
                                      "      {"
                                      "        \"id\": 5,"
                                      "        \"name\": \"Siboire\","
                                      "        \"description\": \"Une brasserie de Sherbrooke.\","
                                      "        \"imagePath\": \"http:\\/\\/www.ambq.ca\\/mod\\/file\\/MembreFile\\/c45147dee729311ef5b5c3003946c48f.png\","
                                      "        \"tags\": ["
                                      "          {"
                                      "            \"id\": 2,"
                                      "            \"name\": \"Artisanale\""
                                      "          }"
                                      "        ],"
                                      "        \"rating\": 4.5"
                                      "      },"
                                      "      {"
                                      "        \"id\": 6,"
                                      "        \"name\": \"SherBroue\","
                                      "        \"description\": \"Génie Sherbrooke!!!\","
                                      "        \"imagePath\": \"http:\\/\\/sherbroue.ca\\/accueil\\/wp-content\\/uploads\\/2012\\/02\\/Couverture-Facebook-1.jpg\","
                                      "        \"tags\": ["
                                      "          {"
                                      "            \"id\": 2,"
                                      "            \"name\": \"Artisanale\""
                                      "          }"
                                      "        ],"
                                      "        \"rating\": 4.0"
                                      "      }"
                                      "    ]"
                                      "  }"
                                      "}")
          response (execute-graphql-query graphql-query)]
      (is (is-data-equal response expected-response))))
  (testing "breweries(skip: 0, first: 10, orderBy: NAME, orderType: ASC, tags: [1])"
    (let [graphql-query (long-str "{"
                                  "  breweries(skip: 0, first: 10, orderBy: NAME, orderType: ASC, tags: [1]) {"
                                  "    id"
                                  "    name"
                                  "    description"
                                  "    imagePath"
                                  "    tags {"
                                  "      id"
                                  "      name"
                                  "    }"
                                  "    rating"
                                  "  }"
                                  "}")
          expected-response (long-str "{"
                                      "  \"data\": {"
                                      "    \"breweries\": ["
                                      "      {"
                                      "        \"id\": 2,"
                                      "        \"name\": \"Labatt\","
                                      "        \"description\": \"Une copie de MolsonCoors en pire...\","
                                      "        \"imagePath\": \"https:\\/\\/upload.wikimedia.org\\/wikipedia\\/fr\\/4\\/40\\/Labatt.png\","
                                      "        \"tags\": ["
                                      "          {"
                                      "            \"id\": 1,"
                                      "            \"name\": \"Industrielle\""
                                      "          }"
                                      "        ],"
                                      "        \"rating\": 1.1666666666666667"
                                      "      },"
                                      "      {"
                                      "        \"id\": 1,"
                                      "        \"name\": \"MolsonCoors\","
                                      "        \"description\": \"Ils ne font de la marde comme bière.\","
                                      "        \"imagePath\": \"https:\\/\\/images.radio-canada.ca\\/q_auto,w_1250\\/v1\\/ici-info\\/16x9\\/molson-montreal-notre-dame.jpg\","
                                      "        \"tags\": ["
                                      "          {"
                                      "            \"id\": 1,"
                                      "            \"name\": \"Industrielle\""
                                      "          }"
                                      "        ],"
                                      "        \"rating\": 1.5"
                                      "      }"
                                      "    ]"
                                      "  }"
                                      "}")
          response (execute-graphql-query graphql-query)]
      (is (is-data-equal response expected-response))))
  (testing "breweries(skip: 0, first: 10, orderBy: NAME, orderType: DESC, tags: [1])"
    (let [graphql-query (long-str "{"
                                  "  breweries(skip: 0, first: 10, orderBy: NAME, orderType: DESC, tags: [1]) {"
                                  "    id"
                                  "    name"
                                  "    description"
                                  "    imagePath"
                                  "    tags {"
                                  "      id"
                                  "      name"
                                  "    }"
                                  "    rating"
                                  "  }"
                                  "}")
          expected-response (long-str "{"
                                      "  \"data\": {"
                                      "    \"breweries\": ["
                                      "      {"
                                      "        \"id\": 1,"
                                      "        \"name\": \"MolsonCoors\","
                                      "        \"description\": \"Ils ne font de la marde comme bière.\","
                                      "        \"imagePath\": \"https:\\/\\/images.radio-canada.ca\\/q_auto,w_1250\\/v1\\/ici-info\\/16x9\\/molson-montreal-notre-dame.jpg\","
                                      "        \"tags\": ["
                                      "          {"
                                      "            \"id\": 1,"
                                      "            \"name\": \"Industrielle\""
                                      "          }"
                                      "        ],"
                                      "        \"rating\": 1.5"
                                      "      },"
                                      "      {"
                                      "        \"id\": 2,"
                                      "        \"name\": \"Labatt\","
                                      "        \"description\": \"Une copie de MolsonCoors en pire...\","
                                      "        \"imagePath\": \"https:\\/\\/upload.wikimedia.org\\/wikipedia\\/fr\\/4\\/40\\/Labatt.png\","
                                      "        \"tags\": ["
                                      "          {"
                                      "            \"id\": 1,"
                                      "            \"name\": \"Industrielle\""
                                      "          }"
                                      "        ],"
                                      "        \"rating\": 1.1666666666666667"
                                      "      }"
                                      "    ]"
                                      "  }"
                                      "}")
          response (execute-graphql-query graphql-query)]
      (is (is-data-equal response expected-response))))
  (testing "breweries(skip: 0, first: 2, orderBy: RATING, orderType: ASC, tags: [])"
    (let [graphql-query (long-str "{"
                                  "  breweries(skip: 0, first: 2, orderBy: RATING, orderType: ASC, tags: []) {"
                                  "    id"
                                  "    name"
                                  "    description"
                                  "    imagePath"
                                  "    tags {"
                                  "      id"
                                  "      name"
                                  "    }"
                                  "    rating"
                                  "  }"
                                  "}")
          expected-response (long-str "{"
                                      "  \"data\": {"
                                      "    \"breweries\": ["
                                      "      {"
                                      "        \"id\": 2,"
                                      "        \"name\": \"Labatt\","
                                      "        \"description\": \"Une copie de MolsonCoors en pire...\","
                                      "        \"imagePath\": \"https:\\/\\/upload.wikimedia.org\\/wikipedia\\/fr\\/4\\/40\\/Labatt.png\","
                                      "        \"tags\": ["
                                      "          {"
                                      "            \"id\": 1,"
                                      "            \"name\": \"Industrielle\""
                                      "          }"
                                      "        ],"
                                      "        \"rating\": 1.1666666666666667"
                                      "      },"
                                      "      {"
                                      "        \"id\": 3,"
                                      "        \"name\": \"Unibroue\","
                                      "        \"description\": \"La bière préférée des gars en génie qui ne connaissent pas ce qui est de la vrai bière.\","
                                      "        \"imagePath\": \"https:\\/\\/encrypted-tbn0.gstatic.com\\/images?q=tbn:ANd9GcTeNRjlWTRpm31yyz_mHoGAE9UdjNaAnt3WVCd9E_FsBnlNnLcGcw\","
                                      "        \"tags\": ["
                                      "          {"
                                      "            \"id\": 2,"
                                      "            \"name\": \"Artisanale\""
                                      "          }"
                                      "        ],"
                                      "        \"rating\": 1.275"
                                      "      }"
                                      "    ]"
                                      "  }"
                                      "}")
          response (execute-graphql-query graphql-query)]
      (is (is-data-equal response expected-response))))
  (testing "breweries(skip: 0, first: 2, orderBy: RATING, orderType: DESC, tags: [])"
    (let [graphql-query (long-str "{"
                                  "  breweries(skip: 0, first: 2, orderBy: RATING, orderType: DESC, tags: []) {"
                                  "    id"
                                  "    name"
                                  "    description"
                                  "    imagePath"
                                  "    tags {"
                                  "      id"
                                  "      name"
                                  "    }"
                                  "    rating"
                                  "  }"
                                  "}")
          expected-response (long-str "{"
                                      "  \"data\": {"
                                      "    \"breweries\": ["
                                      "      {"
                                      "        \"id\": 4,"
                                      "        \"name\": \"Dieu du Ciel!\","
                                      "        \"description\": \"Enfin!! Une brasserie qui fait de la bonne bière.\","
                                      "        \"imagePath\": \"http:\\/\\/theatregillesvigneault.com\\/wp-content\\/uploads\\/2017\\/03\\/DIEU-DU-CIEL.jpg\","
                                      "        \"tags\": ["
                                      "          {"
                                      "            \"id\": 2,"
                                      "            \"name\": \"Artisanale\""
                                      "          },"
                                      "          {"
                                      "            \"id\": 3,"
                                      "            \"name\": \"Bon choix\""
                                      "          }"
                                      "        ],"
                                      "        \"rating\": 4.5"
                                      "      },"
                                      "      {"
                                      "        \"id\": 5,"
                                      "        \"name\": \"Siboire\","
                                      "        \"description\": \"Une brasserie de Sherbrooke.\","
                                      "        \"imagePath\": \"http:\\/\\/www.ambq.ca\\/mod\\/file\\/MembreFile\\/c45147dee729311ef5b5c3003946c48f.png\","
                                      "        \"tags\": ["
                                      "          {"
                                      "            \"id\": 2,"
                                      "            \"name\": \"Artisanale\""
                                      "          }"
                                      "        ],"
                                      "        \"rating\": 4.5"
                                      "      }"
                                      "    ]"
                                      "  }"
                                      "}")
          response (execute-graphql-query graphql-query)]
      (is (is-data-equal response expected-response))))
  (testing "breweries(skip: 1, first: 1, orderBy: RATING, orderType: ASC, tags: [1])"
    (let [graphql-query (long-str "{"
                                  "  breweries(skip: 1, first: 1, orderBy: RATING, orderType: ASC, tags: [1]) {"
                                  "    id"
                                  "    name"
                                  "    description"
                                  "    imagePath"
                                  "    tags {"
                                  "      id"
                                  "      name"
                                  "    }"
                                  "    rating"
                                  "  }"
                                  "}")
          expected-response (long-str "{"
                                      "  \"data\": {"
                                      "    \"breweries\": ["
                                      "      {"
                                      "        \"id\": 1,"
                                      "        \"name\": \"MolsonCoors\","
                                      "        \"description\": \"Ils ne font de la marde comme bière.\","
                                      "        \"imagePath\": \"https:\\/\\/images.radio-canada.ca\\/q_auto,w_1250\\/v1\\/ici-info\\/16x9\\/molson-montreal-notre-dame.jpg\","
                                      "        \"tags\": ["
                                      "          {"
                                      "            \"id\": 1,"
                                      "            \"name\": \"Industrielle\""
                                      "          }"
                                      "        ],"
                                      "        \"rating\": 1.5"
                                      "      }"
                                      "    ]"
                                      "  }"
                                      "}")
          response (execute-graphql-query graphql-query)]
      (is (is-data-equal response expected-response))))
  (testing "breweries(skip: 1, first: 1, orderBy: RATING, orderType: DESC, tags: [1])"
    (let [graphql-query (long-str "{"
                                  "  breweries(skip: 1, first: 1, orderBy: RATING, orderType: DESC, tags: [1]) {"
                                  "    id"
                                  "    name"
                                  "    description"
                                  "    imagePath"
                                  "    tags {"
                                  "      id"
                                  "      name"
                                  "    }"
                                  "    rating"
                                  "  }"
                                  "}")
          expected-response (long-str "{"
                                      "  \"data\": {"
                                      "    \"breweries\": ["
                                      "      {"
                                      "        \"id\": 2,"
                                      "        \"name\": \"Labatt\","
                                      "        \"description\": \"Une copie de MolsonCoors en pire...\","
                                      "        \"imagePath\": \"https:\\/\\/upload.wikimedia.org\\/wikipedia\\/fr\\/4\\/40\\/Labatt.png\","
                                      "        \"tags\": ["
                                      "          {"
                                      "            \"id\": 1,"
                                      "            \"name\": \"Industrielle\""
                                      "          }"
                                      "        ],"
                                      "        \"rating\": 1.1666666666666667"
                                      "      }"
                                      "    ]"
                                      "  }"
                                      "}")
          response (execute-graphql-query graphql-query)]
      (is (is-data-equal response expected-response)))))

(deftest test-resolve-brewery-review
  (testing "breweryReview(idBreweryReview: 2)"
    (let [graphql-query (long-str "{"
                                  " breweryReview(idBreweryReview: 2) {"
                                  "   idBreweryReview"
                                  "   cip"
                                  "   idBrewery"
                                  "   title"
                                  "   content"
                                  "   imagePath"
                                  "   rating"
                                  "   time"
                                  " }"
                                  "}")
          expected-response (long-str "{"
                                      " \"data\": {"
                                      "   \"breweryReview\": {"
                                      "     \"idBreweryReview\": 2,"
                                      "     \"cip\": \"dald2202\","
                                      "     \"idBrewery\": 2,"
                                      "     \"title\": \"Le brasseur de la 50...\","
                                      "     \"content\": \"Ce n'est pas grand exploit...\","
                                      "     \"imagePath\": \"https:\\/\\/www.google.com\\/url?sa=i&source=images&cd=&cad=rja&uact=8&ved=2ahUKEwiylLDdxrPbAhXJjVkKHdQ0AfUQjRx6BAgBEAU&url=http%3A%2F%2Fwww.labatt.com%2Fbrands%2Fnationalbrands.php%3Flanguage%3Dfr&psig=AOvVaw3AY0gWiexTaG1xbjUkwtVH&ust=1527979870192306\","
                                      "     \"rating\": 1.5,"
                                      "     \"time\": \"2018-06-10 10:00:01.0\""
                                      "   }"
                                      " }"
                                      "}")
          response (execute-graphql-query graphql-query)]
      (is (is-data-equal response expected-response)))))

(deftest test-resolve-brewery-reviews
  (testing "breweryReviews(first:3, skip: 0)"
    (let [graphql-query (long-str "{"
                                  " breweryReviews(first:3, skip: 0) {"
                                  "   idBreweryReview"
                                  "   cip"
                                  "   idBrewery"
                                  "   title"
                                  "   content"
                                  "   imagePath"
                                  "   rating"
                                  "   time"
                                  " }"
                                  "}")
          expected-response (long-str "{"
                                      " \"data\": {"
                                      "   \"breweryReviews\": ["
                                      "     {"
                                      "       \"idBreweryReview\": 1,"
                                      "       \"cip\": \"alig2503\","
                                      "       \"idBrewery\": 1,"
                                      "       \"title\": \"Une mauvaise brasserie montréalaise...\","
                                      "       \"content\": \"Sans autre commentaire...\","
                                      "       \"imagePath\": null,"
                                      "       \"rating\": 1.5"
                                      "       \"time\": \"2018-06-10 10:00:00.0\""
                                      "     },"
                                      "     {"
                                      "       \"idBreweryReview\": 2,"
                                      "       \"cip\": \"dald2202\","
                                      "       \"idBrewery\": 2,"
                                      "       \"title\": \"Le brasseur de la 50...\","
                                      "       \"content\": \"Ce n'est pas grand exploit...\","
                                      "       \"imagePath\": \"https:\\/\\/www.google.com\\/url?sa=i&source=images&cd=&cad=rja&uact=8&ved=2ahUKEwiylLDdxrPbAhXJjVkKHdQ0AfUQjRx6BAgBEAU&url=http%3A%2F%2Fwww.labatt.com%2Fbrands%2Fnationalbrands.php%3Flanguage%3Dfr&psig=AOvVaw3AY0gWiexTaG1xbjUkwtVH&ust=1527979870192306\","
                                      "       \"rating\": 1.5"
                                      "       \"time\": \"2018-06-10 10:00:01.0\""
                                      "     },"
                                      "     {"
                                      "       \"idBreweryReview\": 3,"
                                      "       \"cip\": \"lara2318\","
                                      "       \"idBrewery\": 3,"
                                      "       \"title\": \"Ordinaire...\","
                                      "       \"content\": \"Toutes leurs bières ont le même goût...\","
                                      "       \"imagePath\": null,"
                                      "       \"rating\": 0.1"
                                      "       \"time\": \"2018-06-10 10:00:02.0\""
                                      "     }"
                                      "   ]"
                                      " }"
                                      "}")
          response (execute-graphql-query graphql-query)]
      (is (is-data-equal response expected-response)))))

(deftest test-resolve-brewery-review-comment
  (testing "breweryReviewComment(idBreweryReviewComment: 1)"
    (let [graphql-query (long-str "{"
                                  " breweryReviewComment(idBreweryReviewComment: 1) {"
                                  "   idBreweryReviewComment"
                                  "   idBreweryReview"
                                  "   cip"
                                  "   content"
                                  "   time"
                                  " }"
                                  "}")
          expected-response (long-str "{"
                                      " \"data\": {"
                                      "   \"breweryReviewComment\": {"
                                      "     \"idBreweryReviewComment\": 1,"
                                      "     \"idBreweryReview\": 2,"
                                      "     \"cip\": \"alig2503\","
                                      "     \"content\": \"Comment oses-tu dire ceci?\","
                                      "     \"time\": \"2018-06-10 10:00:10.0\""
                                      "   }"
                                      " }"
                                      "}")
          response (execute-graphql-query graphql-query)]
      (is (is-data-equal response expected-response)))))

(deftest test-resolve-brewery-review-comments
  (testing "breweryReviewComments(idBreweryReview: 5, first:10, skip: 0)"
    (let [graphql-query (long-str "{"
                                  " breweryReviewComments(idBreweryReview: 5, first:10, skip: 0) {"
                                  "   idBreweryReviewComment"
                                  "   idBreweryReview"
                                  "   cip"
                                  "   content"
                                  "   time"
                                  " }"
                                  "}")
          expected-response (long-str "{"
                                      " \"data\": {"
                                      "   \"breweryReviewComments\": ["
                                      "     {"
                                      "       \"idBreweryReviewComment\": 5,"
                                      "       \"idBreweryReview\": 5,"
                                      "       \"cip\": \"parp2009\","
                                      "       \"content\": \"PARTY!!! PARTY!!! PARTY!!! PARTY!!!\","
                                      "       \"time\": \"2018-06-10 10:00:14.0\""
                                      "     },"
                                      "     {"
                                      "       \"idBreweryReviewComment\": 4,"
                                      "       \"idBreweryReview\": 5,"
                                      "       \"cip\": \"mahm1904\","
                                      "       \"content\": \"Party!!!\","
                                      "       \"time\": \"2018-06-10 10:00:13.0\""
                                      "     }"
                                      "   ]"
                                      " }"
                                      "}")
          response (execute-graphql-query graphql-query)]
      (is (is-data-equal response expected-response)))))
